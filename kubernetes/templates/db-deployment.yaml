apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.appName }}-db-deployment"
spec:
  replicas: 1
  selector:
    matchLabels:
      connection-0: db 
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        connection-0: db 
    spec:
      containers:
      - name: db-container
        image: postgres:{{ .Values.db.pgVersion }}
        imagePullPolicy: "IfNotPresent"
        ports:
          - containerPort: {{ .Values.db.port }}
        env:
          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                name: db-config-map
                key: postgres-name
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-secret
                key: postgres-password
          - name: POSTGRES_USER
            valueFrom:
              configMapKeyRef:
                name: db-config-map
                key: postgres-user
          - name: POSTGRES_PORT
            valueFrom:
              configMapKeyRef:
                name: db-config-map
                key: postgres-port
          - name: PGDATA
            valueFrom:
              configMapKeyRef:
                name: db-config-map
                key: postgres-pgdata
        volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: {{ .Values.volumeMountName }}
      restartPolicy: Always
      volumes:
        - name: {{ .Values.volumeMountName }}
          persistentVolumeClaim:
            claimName: {{ .Values.volumeClaimName }}
